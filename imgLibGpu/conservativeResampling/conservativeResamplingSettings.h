#pragma once

#include "gpuDevice/gpuDevice.h"

namespace conservativeResampling {

//================================================================
//
// CONSERVATIVE_RESAMPLING_QUALITY
//
// 0: sigma=3 theta=1.3
// 1: sigma=4 theta=1.25
// 2: sigma=5 theta=1.2
//
//================================================================

#define CONSERVATIVE_RESAMPLING_QUALITY 0

//================================================================
//
// sigma
// theta
//
//================================================================

#if CONSERVATIVE_RESAMPLING_QUALITY == 0

    sysinline float32 sigma() {return 3.f;}
    sysinline float32 theta() {return 1.3f;}
    static const Space radius = 10;

#else

    #error

#endif

//================================================================
//
// filterFreq*
//
//================================================================

#if CONSERVATIVE_RESAMPLING_QUALITY == 0

    static devConstant float32 filterFreqOdd[] = {+0.00272309f, +0.00364509f, +0.00483806f, +0.00636745f, +0.00831013f, +0.01075512f, +0.01380404f, +0.01757114f, +0.02218284f, +0.02777665f, +0.03449939f, +0.04250470f, +0.05194971f, +0.06299099f, +0.07577976f, +0.09045655f, +0.10714538f, +0.12594779f, +0.14693687f, +0.17015174f, +0.19559259f, +0.22321679f, +0.25293621f, +0.28461609f, +0.31807559f, +0.35309010f, +0.38939534f, +0.42669312f, +0.46465866f, +0.50294895f, +0.54121207f, +0.57909685f, +0.61626250f, +0.65238780f, +0.68717934f, +0.72037862f, +0.75176753f, +0.78117220f, +0.80846508f, +0.83356513f, +0.85643654f, +0.87708575f, +0.89555746f, +0.91192950f, +0.92630727f, +0.93881772f, +0.94960338f, +0.95881665f, +0.96661445f, +0.97315365f, +0.97858701f, +0.98306009f, +0.98670876f, +0.98965765f, +0.99201907f, +0.99389268f, +0.99536561f, +0.99651290f, +0.99739834f, +0.99807542f, +0.99858840f, +0.99897350f, +0.99925994f, +0.99947103f, +0.99962517f, +0.99973669f, +0.99981663f, +0.99987341f, +0.99991337f, +0.99994124f, +0.99996048f, +0.99997366f, +0.99998260f, +0.99998860f, +0.99999260f, +0.99999524f, +0.99999696f, +0.99999808f, +0.99999880f, +0.99999925f, +0.99999954f, +0.99999972f, +0.99999983f, +0.99999990f, +0.99999994f, +0.99999996f, +0.99999998f, +0.99999999f, +0.99999999f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +0.99999999f, +0.99999999f, +0.99999998f, +0.99999996f, +0.99999994f, +0.99999990f, +0.99999983f, +0.99999972f, +0.99999954f, +0.99999925f, +0.99999880f, +0.99999808f, +0.99999696f, +0.99999524f, +0.99999260f, +0.99998860f, +0.99998260f, +0.99997366f, +0.99996048f, +0.99994124f, +0.99991337f, +0.99987341f, +0.99981663f, +0.99973669f, +0.99962517f, +0.99947103f, +0.99925994f, +0.99897350f, +0.99858840f, +0.99807542f, +0.99739834f, +0.99651290f, +0.99536561f, +0.99389268f, +0.99201907f, +0.98965765f, +0.98670876f, +0.98306009f, +0.97858701f, +0.97315365f, +0.96661445f, +0.95881665f, +0.94960338f, +0.93881772f, +0.92630727f, +0.91192950f, +0.89555746f, +0.87708575f, +0.85643654f, +0.83356513f, +0.80846508f, +0.78117220f, +0.75176753f, +0.72037862f, +0.68717934f, +0.65238780f, +0.61626250f, +0.57909685f, +0.54121207f, +0.50294895f, +0.46465866f, +0.42669312f, +0.38939534f, +0.35309010f, +0.31807559f, +0.28461609f, +0.25293621f, +0.22321679f, +0.19559259f, +0.17015174f, +0.14693687f, +0.12594779f, +0.10714538f, +0.09045655f, +0.07577976f, +0.06299099f, +0.05194971f, +0.04250470f, +0.03449939f, +0.02777665f, +0.02218284f, +0.01757114f, +0.01380404f, +0.01075512f, +0.00831013f, +0.00636745f, +0.00483806f, +0.00364509f, +0.00272309f};
    static devConstant float32 filterFreqEven[] = {+0.00272152f, +0.00363896f, +0.00482489f, +0.00634394f, +0.00827192f, +0.01069663f, +0.01371825f, +0.01744941f, +0.02201474f, +0.02754983f, +0.03419949f, +0.04211538f, +0.05145272f, +0.06236638f, +0.07500621f, +0.08951184f, +0.10600697f, +0.12459349f, +0.14534573f, +0.16830485f, +0.19347407f, +0.22081466f, +0.25024328f, +0.28163072f, +0.31480226f, +0.34953982f, +0.38558579f, +0.42264858f, +0.46040957f, +0.49853128f, +0.53666641f, +0.57446731f, +0.61159541f, +0.64773034f, +0.68257816f, +0.71587844f, +0.74740989f, +0.77699436f, +0.80449911f, +0.82983729f, +0.85296682f, +0.87388781f, +0.89263868f, +0.90929138f, +0.92394590f, +0.93672447f, +0.94776569f, +0.95721882f, +0.96523851f, +0.97198013f, +0.97759570f, +0.98223069f, +0.98602144f, +0.98909349f, +0.99156040f, +0.99352332f, +0.99507098f, +0.99628011f, +0.99721615f, +0.99793417f, +0.99847993f, +0.99889099f, +0.99919776f, +0.99942462f, +0.99959085f, +0.99971155f, +0.99979839f, +0.99986030f, +0.99990404f, +0.99993465f, +0.99995588f, +0.99997047f, +0.99998041f, +0.99998712f, +0.99999160f, +0.99999457f, +0.99999652f, +0.99999779f, +0.99999861f, +0.99999913f, +0.99999946f, +0.99999967f, +0.99999980f, +0.99999988f, +0.99999993f, +0.99999996f, +0.99999998f, +0.99999999f, +0.99999999f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +1.00000000f, +0.99999999f, +0.99999999f, +0.99999998f, +0.99999996f, +0.99999993f, +0.99999988f, +0.99999980f, +0.99999967f, +0.99999946f, +0.99999913f, +0.99999861f, +0.99999779f, +0.99999652f, +0.99999457f, +0.99999160f, +0.99998712f, +0.99998041f, +0.99997047f, +0.99995588f, +0.99993465f, +0.99990404f, +0.99986030f, +0.99979839f, +0.99971155f, +0.99959085f, +0.99942462f, +0.99919776f, +0.99889099f, +0.99847993f, +0.99793417f, +0.99721615f, +0.99628011f, +0.99507098f, +0.99352332f, +0.99156040f, +0.98909349f, +0.98602144f, +0.98223069f, +0.97759570f, +0.97198013f, +0.96523851f, +0.95721882f, +0.94776569f, +0.93672447f, +0.92394590f, +0.90929138f, +0.89263868f, +0.87388781f, +0.85296682f, +0.82983729f, +0.80449911f, +0.77699436f, +0.74740989f, +0.71587844f, +0.68257816f, +0.64773034f, +0.61159541f, +0.57446731f, +0.53666641f, +0.49853128f, +0.46040957f, +0.42264858f, +0.38558579f, +0.34953982f, +0.31480226f, +0.28163072f, +0.25024328f, +0.22081466f, +0.19347407f, +0.16830485f, +0.14534573f, +0.12459349f, +0.10600697f, +0.08951184f, +0.07500621f, +0.06236638f, +0.05145272f, +0.04211538f, +0.03419949f, +0.02754983f, +0.02201474f, +0.01744941f, +0.01371825f, +0.01069663f, +0.00827192f, +0.00634394f, +0.00482489f, +0.00363896f, +0.00272152f};

#else

    #error

#endif

//----------------------------------------------------------------

}
